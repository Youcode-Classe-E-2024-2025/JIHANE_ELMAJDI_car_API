{
    "openapi": "3.0.0",
    "info": {
        "title": "Car Rental API",
        "description": "API pour la gestion d'un service de location de voitures",
        "contact": {
            "name": "API Support",
            "email": "contact@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://my-default-host.com",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "a718f172ff3ac464d723835815f8fb57",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "operationId": "44212a9096e4b09358281e9ec8a0701d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out the user (revoke token)",
                "operationId": "79854151e609bd20032aa5aa4d5a35c0",
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user information",
                "operationId": "b5e90fe100cd00fd4957f924d70b7db8",
                "responses": {
                    "200": {
                        "description": "User information retrieved successfully"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users (admin only)",
                "operationId": "fcdf14019156e5ac23913a6eef9d6416",
                "responses": {
                    "200": {
                        "description": "List of users"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cars": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get list of cars",
                "description": "Returns list of cars with pagination and filters",
                "operationId": "158b081c3b62cbad1d47a7baf9ed52ac",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by car status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "available",
                                "rented",
                                "maintenance"
                            ]
                        }
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "description": "Filter by car brand",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Cars"
                ],
                "summary": "Create a new car",
                "operationId": "581b89650bc67a7ae22937830482fcb7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand",
                                    "model",
                                    "year",
                                    "color",
                                    "license_plate",
                                    "daily_rate"
                                ],
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2020
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Blue"
                                    },
                                    "license_plate": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "daily_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "rented",
                                            "maintenance"
                                        ],
                                        "example": "available"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Car created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cars/{id}": {
            "get": {
                "tags": [
                    "Cars"
                ],
                "summary": "Get a specific car",
                "operationId": "d7bb47a818dc5b242dc4999f159d1037",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car details"
                    },
                    "404": {
                        "description": "Car not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Cars"
                ],
                "summary": "Update a car",
                "operationId": "1feba9c073fea407739f3c5f99980c70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "brand": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "model": {
                                        "type": "string",
                                        "example": "Corolla"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": 2020
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Blue"
                                    },
                                    "license_plate": {
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "daily_rate": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 50
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "available",
                                            "rented",
                                            "maintenance"
                                        ],
                                        "example": "available"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Car updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "403": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cars"
                ],
                "summary": "Delete a car",
                "operationId": "8e2cc084cc4b07e94c769d0f92e214fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the car",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Car deleted successfully"
                    },
                    "404": {
                        "description": "Car not found"
                    },
                    "403": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get list of payments",
                "description": "Returns list of payments for admin or user's own payments",
                "operationId": "a67c4dcf277fa699515fd3b6d4835388",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by payment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "completed",
                                "failed",
                                "refunded"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new payment",
                "operationId": "6b47fbea138d1f528831ed3e92ee46fd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rental_id",
                                    "amount",
                                    "payment_method"
                                ],
                                "properties": {
                                    "rental_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 250
                                    },
                                    "payment_method": {
                                        "type": "string",
                                        "enum": [
                                            "credit_card",
                                            "debit_card",
                                            "paypal"
                                        ],
                                        "example": "credit_card"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "403": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Get a specific payment",
                "operationId": "055c1b4080a8c5b59d53aa69a505abf5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details"
                    },
                    "404": {
                        "description": "Payment not found"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rentals": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Get list of rentals",
                "description": "Returns list of rentals for admin or user's own rentals",
                "operationId": "d13fcfe718a0671835de4db25a529dff",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by rental status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "active",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Create a new rental",
                "operationId": "6fc81685c760b26ee1d42d0ccb869b65",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "car_id",
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "car_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-03-15"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-03-20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rental created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "409": {
                        "description": "Car not available for rental"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/rentals/{id}": {
            "get": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Get a specific rental",
                "operationId": "a3fb6db302d7db71105219f3b1f1dcdc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rental",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental details"
                    },
                    "404": {
                        "description": "Rental not found"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Update a rental",
                "operationId": "6d7b385c632be83c56f3d93d9cfc0153",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rental",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "pending",
                                            "active",
                                            "completed",
                                            "cancelled"
                                        ],
                                        "example": "active"
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-03-15"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-03-20"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rental updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Rental not found"
                    },
                    "403": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Rentals"
                ],
                "summary": "Cancel a rental",
                "operationId": "0980688f0b0d961178a82d58cc356d66",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the rental",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rental cancelled successfully"
                    },
                    "404": {
                        "description": "Rental not found"
                    },
                    "403": {
                        "description": "Unauthorized action"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Cars",
            "description": "Cars"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "Rentals",
            "description": "Rentals"
        }
    ]
}